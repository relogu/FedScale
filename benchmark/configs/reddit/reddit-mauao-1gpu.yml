# Configuration file of FAR training experiment
# ========== Cluster configuration ========== 
# IP address of the parameter server (need 1 GPU process)
ps_ip: localhost
# <IP address of each worker>:[<# of available gpus processes on each gpu in this node>]
# Note that if we collocate ps and worker on same GPU, then we need to decrease this number of available processes on that GPU by 1
# E.g., master node has 4 available processes, then 1 for the ps, and worker should be set to: worker:3
worker_ips: 
    - localhost:[1]
# Experiment path
exp_path: /nfs-share/ls985/FedScale/fedscale/cloud
# Entry function of executor and aggregator under $exp_path
executor_entry: execution/executor.py
aggregator_entry: aggregation/aggregator.py
# Authentication for ssh (unused if running locally)
auth:
    ssh_user: ""
    ssh_private_key: ~/.ssh/id_rsa
# Commands to run before we can indeed run FAR (in order)
setup_commands:
    - poetry shell
# ========== Additional job configuration ========== 
# Default parameters are specified in config_parser.py, wherein more description of the parameter can be found
job_conf: 
    - ps_port: 29507
    # Generate logs under this folder: log_path/job_name/time_stamp
    - job_name: reddit-mauao-1gpu
    # Path of log files
    - log_path: /nfs-share/ls985/FedScale/benchmark
    - task: nlp
    # Number of participants per round, we use K=100 in our paper, large K will be much slower
    - num_participants: 100
    # Dataset: openImg, google_speech, blog, shakespeare
    - data_set: blog
    # Path of the dataset
    - data_dir: /datasets/FedScale/reddit/reddit
    # Allocation of data to each client, turn to iid setting if not provided
    - data_map_file: /datasets/FedScale/reddit/reddit/client_data_mapping/train.csv
    # Models: e.g., shufflenet_v2_x2_0, mobilenet_v2, resnet34, albert-base-v2, shakespeare
    - model: albert-base-v2
    # {"fed-yogi", "fed-prox", "fed-avg"}, "fed-avg" by default
    - gradient_policy: fed-avg
    # How many rounds to run a testing on the testing set
    - eval_interval: 5001
    # Number of rounds to run this training. We use 1000 in our paper, while it may converge w/ ~400 rounds
    - rounds: 110
    # Remove clients w/ less than `filter_less` samples
    - filter_less: 21
    # Sets the `num_workers` parameter of the `torch.utils.data.DataLoader`
    - num_loaders: 4
    # We are using epochs, so this is the number of epochs to run
    - local_steps: 1
    - learning_rate: 4e-5
    - min_learning_rate: 1e-5
    - batch_size: 20
    - test_bsz: 20
