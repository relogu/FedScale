[build-system]
requires = ["poetry-core>=1.4.0"]
build-backend = "poetry.masonry.api"

[tool.poetry]
name = "pollen_worker" # <----- Ensure it matches the name of your baseline directory containing all the source code
version = "1.0.0"
description = "Flower Baselines"
license = "Apache-2.0"
authors = ["The Flower Authors <hello@flower.dev>"]
readme = "README.md"
homepage = "https://flower.dev"
repository = "https://github.com/adap/flower"
documentation = "https://flower.dev"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]


[tool.poetry.dependencies]
python = ">=3.9.17, <=3.10.0"  # don't change this
hydra-core = "1.3.2" # don't change this
torch = {url = "https://download.pytorch.org/whl/cu113/torch-1.12.1%2Bcu113-cp39-cp39-linux_x86_64.whl"}
torchvision = {url = "https://download.pytorch.org/whl/cu113/torchvision-0.13.1%2Bcu113-cp39-cp39-linux_x86_64.whl"}
torchaudio = {url = "https://download.pytorch.org/whl/cu113/torchaudio-0.12.1%2Bcu113-cp39-cp39-linux_x86_64.whl#sha256=08c54695771e96d2a1d3b4fd0caaeaf6478d4c8f563655c6d036b90f2aa45309"}
torchmetrics = {url = "https://download.pytorch.org/whl/torchmetrics-1.0.3-py3-none-any.whl#sha256=612a74ab8ebfcd4ebb38e5c370ce29a0e73af074948048f6f2233e25cf60da75"}
types-protobuf = "^4.24.0.1"
types-pyyaml = "^6.0.12.12"
types-decorator = "^5.1.8.4"
types-setuptools = "^68.2.0.0"
wandb = "^0.15.12"
pyarrow = "^13.0.0"
multiprocess = "^0.70.15"
nvsmi = "^0.4.2"
transformers = "^4.34.0"
cloudpickle = "^2.2.1"
tqdm = "^4.66.1"
psutil = "^5.9.5"
pandas = "^2.1.1"
scipy = "^1.11.3"
librosa = "^0.10.1"
flwr = {extras = ["simulation"], version = "^1.5.0"}
nvidia-ml-py = "11.495.46"
sentencepiece = "^0.1.99"
pyyaml = "^6.0.1"
tensorboard = "^2.14.1"
tensorflow = "^2.14.0"
overrides = "^7.4.0"


[tool.poetry.dev-dependencies]
isort = "==5.11.5"
black = { version = "==23.1.0", extras = ["jupyter"] }
docformatter = "==1.5.1"
mypy = "==0.961"
pylint = "==2.8.2"
flake8 = "==3.9.2"
pytest = "==6.2.4"
pytest-watch = "==4.2.0"
ruff = "==0.0.272"
types-requests = "==2.27.7"
yamlfix = "^1.14.0"

[tool.isort]
line_length = 88
indent = "    "
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311"]

[tool.pytest.ini_options]
minversion = "6.2"
addopts = "-qq"
testpaths = [
    "flwr_baselines",
]

[tool.mypy]
ignore_missing_imports = true
show_error_codes = true
strict = false
plugins = "numpy.typing.mypy_plugin"

[tool.pylint."MESSAGES CONTROL"]
disable = "bad-continuation,duplicate-code,too-few-public-methods,useless-import-alias,import-error,no-member,no-name-in-module"
good-names = "f,i,j,k,_,x,y,X,Y"
signature-mutators="hydra.main.main"

[[tool.mypy.overrides]]
module = [
    "importlib.metadata.*",
    "importlib_metadata.*",
]
follow_imports = "skip"
follow_imports_for_stubs = true
disallow_untyped_calls = false

[[tool.mypy.overrides]]
module = "torch.*"
follow_imports = "skip"
follow_imports_for_stubs = true

[tool.docformatter]
wrap-summaries = 88
wrap-descriptions = 88


[tool.yamlfix]
allow_duplicate_keys = false
line_length = 88
none_representation = "null"
whitelines = 1
section_whitelines = 1
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "proto",
]

[tool.ruff]
target-version = "py38"
line-length = 88
select = ["D", "E", "F", "W", "B", "ISC", "C4"]
fixable = ["D", "E", "F", "W", "B", "ISC", "C4"]
ignore = ["B024", "B027"]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "proto",
]

[tool.ruff.pydocstyle]
convention = "numpy"
